---
- hosts: localhost
  gather_facts: no
  vars:
    master_ignition_file: "../scripts/{{ cluster_domain }}/master.ign"
    master_ignition_content: "{{ lookup('file', master_ignition_file) }}"
    certificate_bundle_line: "{{ master_ignition_content | json_query('ignition.security.tls.certificateAuthorities[0].source') }}"
    bootstrap_ignition: "../scripts/{{ cluster_domain }}/bootstrap.ign"
    bootstrap_light_ignition: "../scripts/{{ cluster_domain }}/bootstrap-light-ignition.ign"

  tasks:
    - name: generate master ignition files
      template:
        src: templates/master-ignition.ign.j2
        dest: "../scripts/{{ cluster_domain }}/{{ hostname }}.ign"
      loop: "{{ masters }}"
      loop_control:
        loop_var: node
        label: "{{ fqdn }}"
      vars:
        node_type: "master"
        hostname: "{{ node['name'] }}"
        ip_mgmt: "{{ node['ip_mgmt'] }}"
        ip_cluster: "{{ node['ip_cluster'] }}"
        ip_outbound: "{{ node['ip_outbound'] }}"
        ip_public: "{{ node['ip_public'] }}"
        fqdn: "{{ node['name'] }}.{{ cluster_domain }}"

    - name: Initiate bootsrap configs
      set_fact:
        files: []
  
    - name: generate bootsrap ignition files
      template:
        src: templates/bootstrap-light-ignition.ign.j2
        dest: "../scripts/{{ cluster_domain }}/bootstrap-light-ignition.ign"

    - name: Create interfaces Dictionary
      set_fact:
        bootstrap_ignition_files: "{{ bootstrap_ignition.storage.files }}"
        bootstrap_light_ignition_files: "{{ bootstrap_light_ignition.storage.files }}"


