---
- hosts: localhost
  gather_facts: no
  vars:
    master_ignition_file: "../scripts/{{ cluster_name }}.{{ cluster_domain }}/master.ign"
    master_ignition_content: "{{ lookup('file', master_ignition_file) }}"
    certificate_bundle_line: "{{ master_ignition_content | json_query('ignition.security.tls.certificateAuthorities[0].source') }}"

  tasks:
    - name: generate light bootstrap ignition files
      template:
        src: templates/bootstrap-light-ignition.ign.j2
        dest: "../scripts/{{ cluster_name }}.{{ cluster_domain }}/bootstrap-light-ignition.ign"

    - name: Load bootstrap iginition
      set_fact:
        bootstrap_ignition: "{{ lookup('file','../scripts/{{ cluster_name }}.{{ cluster_domain }}/bootstrap.ign') | from_json }}"

    - name: Load light bootstrap ignition
      set_fact:
        bootstrap_light_ignition: "{{ lookup('file','../scripts/{{ cluster_name }}.{{ cluster_domain }}/bootstrap-light-ignition.ign') | from_json }}"

    - name: merge bootstrap ignition files object
      set_fact:
        merged_bootstrap_ignition: "{{ { 'ignition': bootstrap_ignition.ignition, 'passwd':bootstrap_ignition.passwd, 'storage':{'files':([bootstrap_ignition.storage.files]+[bootstrap_light_ignition.storage.files])}, 'systemd':bootstrap_ignition.systemd } }}"

    - name: generate final bootstrap ignition files
      template:
        src: templates/bootstrap-final-ignition.ign.j2
        dest: "../scripts/{{ cluster_name }}.{{ cluster_domain }}/final-bootstrap.ign"

    - name: generate master ignition files
      template:
        src: templates/master-ignition.ign.j2
        dest: "../scripts/{{ cluster_name }}.{{ cluster_domain }}/{{ cluster_name }}-{{ node_type }}-{{ hostname }}-ignition.json"
      loop: "{{ masters }}"
      loop_control:
        loop_var: node
        label: "{{ fqdn }}"
      vars:
        node_type: "master"
        hostname: "{{ node['name'] }}"
        ip_mgmt: "{{ node['ip_mgmt'] }}"
        ip_cluster: "{{ node['ip_cluster'] }}"
        ip_outbound: "{{ node['ip_outbound'] }}"
        ip_public: "{{ node['ip_public'] }}"
        fqdn: "{{ node['name'] }}.{{ cluster_domain }}"
