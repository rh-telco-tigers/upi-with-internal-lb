# Required Python packages:
#
# ansible
# openstackclient
# openstacksdk
# netaddr

- import_playbook: common.yaml

- hosts: all
  gather_facts: no

  tasks:
  - name: 'Create the Control Plane outbound ports'
    os_port:
      name: "outbound-{{ item.1 }}-{{ item.0 }}"
      network: ocp30_outbound
      security_groups:
      - "{{ os_sg_master }}"
    with_indexed_items: "{{ [os_port_master] * os_cp_nodes_number }}"
    register: portsoutbound

  - name: 'Create the Control Plane public ports'
    os_port:
      name: "public-{{ item.1 }}-{{ item.0 }}"
      network: ocp30_public
      security_groups:
      - "{{ os_sg_master }}"
    with_indexed_items: "{{ [os_port_master] * os_cp_nodes_number }}"
    register: portspublic

  - name: 'Create the Control Plane management ports'
    os_port:
      name: "management-{{ item.1 }}-{{ item.0 }}"
      network: ocp30_management
      security_groups:
      - "{{ os_sg_master }}"
    with_indexed_items: "{{ [os_port_master] * os_cp_nodes_number }}"
    register: portsmanagement

  - name: 'Create the Control Plane ports'
    os_port:
      name: "{{ item.1 }}-{{ item.0 }}"
      network: "{{ os_network }}"
      fixed_ips: "{{ os_subnet_range | next_nth_usable({{ item.0 + 6 }}) }}"
      security_groups:
      - "{{ os_sg_master }}"
      allowed_address_pairs:
      - ip_address: "{{ os_subnet_range | next_nth_usable(13) }}"
      - ip_address: "{{ os_subnet_range | next_nth_usable(14) }}"
      - ip_address: "{{ os_subnet_range | next_nth_usable(8) }}"
    with_indexed_items: "{{ [os_port_master] * os_cp_nodes_number }}"
    register: ports

  - name: 'List the Control Plane Trunks'
    command:
      cmd: "openstack network trunk list"
    when: os_networking_type == "Kuryr"
    register: control_plane_trunks

  - name: 'Create the Control Plane trunks'
    command:
      cmd: "openstack network trunk create --parent-port {{ item.1.id }} {{ os_cp_trunk_name }}-{{ item.0 }}"
    with_indexed_items: "{{ ports.results }}"
    when:
    - os_networking_type == "Kuryr"
    - "os_cp_trunk_name|string not in control_plane_trunks.stdout"
